openapi: 3.0.1
info:
  title: STD2032 TD-Final-Part1
  description: API for managing football competitions, teams, and players.
  version: 1.0.0

servers:
  - url: https://STD23032.football-competition.com

paths:
  /competitions:
    get:
      summary: Get the list of competitions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number.
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items per page.
      responses:
        "200":
          description: A paginated list of competitions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCompetitions"

    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Competition"
      responses:
        "201":
          description: Competition created successfully.

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - in: query
          name: teamName
          schema:
            type: string
          description: Filter teams by name.
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number.
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items per page.
      responses:
        '200':
          description: A paginated list of teams.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeams'

    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team created successfully.

  /teams/{teamId}/players:
    get:
      summary: Get a list of players in a team
      parameters:
        - in: path
          name: teamId
          schema:
            type: integer
          required: true
          description: The ID of the team.
        - in: query
          name: playerName
          schema:
            type: string
          description: Filter players by name.
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number.
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: The number of items per page.
      responses:
        '200':
          description: A paginated list of players.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlayers'

 post:
      summary: Create a new player in a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player created successfully.

  /teams/{teamId}/competitions:
    post:
      summary: Associate a team with competitions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                competitionIds:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Team successfully associated with competitions.

  /teams/{teamId}/players/associate:
    post:
      summary: Associate a list of players with a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                playerIds:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Players successfully associated with the team.

components:
  schemas:
    Competition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        location:
          type: string

    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    Player:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        number:
          type: integer
        strongFoot:
          type: string
          enum:
            - Left
            - Right

    PaginatedCompetitions:
      type: object
      properties:
        totalItems:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        currentPage:
          type: integer
        totalPages:
          type: integer

    PaginatedTeams:
      type: object
      properties:
        totalItems:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        currentPage:
          type: integer
        totalPages:
          type: integer

    PaginatedPlayers:
      type: object
      properties:
        totalItems:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        currentPage:
          type: integer
        totalPages:
          type: integer